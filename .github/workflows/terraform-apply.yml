name: Terraform Apply

on:
  workflow_dispatch:
    inputs:
      auto_approve:
        description: 'Auto-approve apply (skip manual approval)'
        required: false
        default: false
        type: boolean

env:
  TF_VERSION: "1.10.0"
  WORKING_DIR: "infrastructure_tooling/proxmox/terraform"

jobs:
  terraform-apply:
    name: Terraform Apply
    runs-on: [self-hosted, Linux, X64]
    environment: prod
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Create Terraform Variables File
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          cat > terraform.tfvars << EOF
          # Proxmox API connection details
          proxmox_api_url          = "${{ secrets.PROXMOX_URL }}"
          proxmox_api_token_id     = "${{ secrets.PROXMOX_USERNAME }}"
          proxmox_api_token_secret = "${{ secrets.PROXMOX_TOKEN }}"

          # Proxmox node settings
          target_node = "${{ secrets.PROXMOX_NODE || 'proxmox' }}"

          # Storage settings
          disk_storage = "local-lvm"

          # Network settings
          network_bridge = "vmbr0"
          gateway        = "192.168.1.1"
          dns_servers    = ["8.8.8.8", "8.8.4.4"]
          dns_domain     = "home"

          # SSH public keys for cloud-init
          ssh_public_keys = "${{ secrets.SSH_PUBLIC_KEYS }}"

          # VM password
          vm_password = "${{ secrets.SSH_PASSWORD }}"
          EOF

      - name: Terraform Init
        working-directory: ${{ env.WORKING_DIR }}
        run: terraform init
        env:
          CONSUL_HTTP_TOKEN: ${{ secrets.CONSUL_HTTP_TOKEN }}

      - name: Terraform Plan
        working-directory: ${{ env.WORKING_DIR }}
        run: terraform plan -out=tfplan
        env:
          CONSUL_HTTP_TOKEN: ${{ secrets.CONSUL_HTTP_TOKEN }}

      - name: Terraform Apply
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          if [ "${{ github.event.inputs.auto_approve }}" = "true" ]; then
            terraform apply -auto-approve tfplan
          else
            terraform apply tfplan
          fi
        env:
          CONSUL_HTTP_TOKEN: ${{ secrets.CONSUL_HTTP_TOKEN }}

      - name: Cleanup Temporary Files
        if: always()
        working-directory: ${{ env.WORKING_DIR }}
        run: rm -f terraform.tfvars

      - name: Apply Summary
        if: success()
        run: |
          echo "## Terraform Apply Completed" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** Success" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Infrastructure has been successfully deployed to Proxmox!" >> $GITHUB_STEP_SUMMARY